import java.util.*;
import java.lang.*;
class Node{
	int data;
	Node left,right;
	Node(int val){
		data = val;
		left = null;
		right = null;
	}
}
class Tree{

	public void inorder(Node root) {
		if(root == null)
			return;
		inorder(root.left);
		System.out.println(root.data);
		inorder(root.right);
	}
	public boolean isBST(Node root) {
		if(root == null) 
			return true;
		if(root.left!=null  && getMax(root.left)>root.data)
			 return false;	
		if(root.right!=null && getMin(root.right)<root.data)
			 return false;
	    if(!isBST(root.left) || !isBST(root.right))
	    	return false;
	    return true;
	}
	public int getMax(Node root) {
		Node t = root;
	    while(t.right!=null)
	    	t = t.right;
	    return t.data;
	}
	public int getMin(Node root) {
		Node t = root;
		while(t.left!=null)
			 t = t.left;
		return t.data;
	}
}
public class Main
{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		Tree tree = new Tree();
		Node root = null;
		root = new Node(10);
		root.left = new Node(8);
		root.right = new Node(30);
		root.right.left = new Node(18);
		root.right.right = new Node(35);
		root.right.right.left = new Node(12);
		tree.inorder(root);
		System.out.println(tree.isBST(root));
	}
}
