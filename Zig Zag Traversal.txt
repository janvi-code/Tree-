/*class Node
{
    int data;
    Node left,right;
    Node(int d)
    {
        data=d;
        left=right=null;
    }
}*/
// Print the zig zag traversal of tree.
class GFG
{
    // return an array containing the zig zag level order traversal of the given tree
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	    ArrayList<Integer> res = new ArrayList<>();
	    if(root == null)
	      return res;
	    Stack<Node> s1 = new Stack<>();
	    Stack<Node> s2 = new Stack<>();
	    s1.push(root);
	    while(!s1.isEmpty() || !s2.isEmpty()){
	    while(!s1.isEmpty()){
	        Node t = s1.pop();
	        res.add(t.data);
	        if(t.left!=null)
	          s2.push(t.left);
	        if(t.right!=null)
	          s2.push(t.right);
	    }
	           while(!s2.isEmpty()){
	            Node k = s2.pop();
	            res.add(k.data);
	       if(k.right!=null)
	          s1.push(k.right);
	        if(k.left!=null)
	          s1.push(k.left);
	            
	        }
	    }
	    return res;
	}
}